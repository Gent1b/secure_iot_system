services:
  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto_config:/mosquitto/config
    healthcheck:
      test: ["CMD", "mosquitto", "-c", "/mosquitto/config/mosquitto.conf", "-d"]
      interval: 10s
      retries: 3

  publisher_device:
    build:
      context: ./publisher
    deploy:
      replicas: 5
    depends_on:
      mqtt_broker:
        condition: service_healthy
    environment:
      - BROKER=${BROKER}
      - MQTT_TOPIC=${MQTT_TOPIC}

  subscriber:
    build:
      context: ./subscriber
    depends_on:
      mqtt_broker:
        condition: service_healthy
    environment:
      - BROKER=${BROKER}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}

  influxdb_health_check:
    image: python:3.9-slim
    container_name: influxdb_health_check
    volumes:
      - ./health_check:/app
    working_dir: /app
    command: ["python", "check_influxdb.py"]
    environment:
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
    depends_on:
      mqtt_broker:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      mqtt_broker:
        condition: service_healthy

volumes:
  grafana_data:
